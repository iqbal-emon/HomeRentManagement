@page "/BillGenerate"
@using HomeRentManagement.Data;
@inject BillGenerateService billservice;
@inject UserService userservice;
@inject IJSRuntime js
@inject UserIdDecrypt useriddecrypt
@inject NavigationManager NavigationManager



<div class="container mt-5">
    <div class="d-flex justify-content-between">
        <h3>Bill Generate</h3>
        <button class="btn btn-primary" @onclick="showModel">Add Bill</button>
    </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Tenant Name</th>
                    <th>Unit Name</th>
                    <th>Month Name</th>
                    <th>Rent</th>
                    <th>Electricity Billl</th>
                    <th>Gas Bill</th>
                    <th>Service Charge</th>
                    <th>Total</th>

                    <th>Action</th>


                </tr>
            </thead>
            <tbody>
                @if (Bg != null && Bg.Any())
                {
                    @foreach (var Bge in Bg)
                    {
                        <tr>
                          
                            <td>@Bge.Tenant?.TenantName</td>
                            <td>@Bge.Tenant?.Unit.unitName</td>
                            <td>@Bge.MonthName</td>
                          
                            <td>@Bge.Tenant?.Unit.Rent</td>
                            <td>@Bge.ElectricityBill</td>
                            <td>@Bge.GasBill</td>
                            <td>@Bge.ServiceCharge</td>
                            <td>@Bge.TotalRent</td>

                            <td>
                                @if (Bge.StatusId == 3)
                                {

                                    <button disabled class="btn btn-danger btn-sm mr-3">Delete</button>
                                }
                                else
                                {
                                    <button class="btn btn-danger btn-sm mr-3" @onclick="() =>DeleteBill(Bge.BillingID)">Delete</button>

                                }
                                <button class="btn btn-primary btn-sm m-2" @onclick="()=>UpdateBill(Bge.BillingID,Bge.Tenant.UnitID)">Edit</button>
                                <button class="btn btn-secondary btn-sm m-2" @onclick="()=>DetailsRent(Bge.BillingID)">Details</button>

                            </td>


                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">No members found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal px-5" tabindex="-1" style="@ModalStyle">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Bill</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="HideModal"></button>
            </div>
            <div class="modal-body">
                <form @onsubmit="SaveBill">
                    <div class="form-group">
                        <label for="ElectricityBill">Electricity Bill:</label>
                        <input type="number" class="form-control" @bind="bill.ElectricityBill" required />
                    </div>
                    <div class="form-group">
                        <label for="GasBill">Gas Bill:</label>
                        <input type="number" class="form-control" @bind="bill.GasBill" required />
                    </div>
                    <div class="form-group">
                        <label for="ServiceCharge">Service Charge:</label>
                        <input type="number" class="form-control" @bind="bill.ServiceCharge" />
                    </div>
                    <div class="form-group">
                        <label for="ServiceCharge">Month Name:</label>
                        <input type="text" class="form-control" @bind="bill.MonthName" />
                    </div>
                    <div class="form-group">
                        <label for="Unit Name">Unit Name:</label>
                        <select class="form-control" @bind="newUnit" required>
                            @foreach (var unit in unitOptions)
                            {
                                <option value="@unit.UnitID">@unit.Unit?.unitName</option>
                            }
                        </select>
                    </div>
                  



                    <button type="submit" class="btn btn-primary mt-3">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

@if (updateBill != null)
{
    <div class="modal px-5" tabindex="-1" style="@EditModalStyle">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Bill</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="hideUpdate"></button>
                </div>
                <div class="modal-body">
                    <form @onsubmit="UpdatedBill">
                        <div class="form-group">
                            <label for="ElectricityBill">Electricity Bill:</label>
                            <input type="number" class="form-control" @bind="updateBill.ElectricityBill" required />
                        </div>
                        <div class="form-group">
                            <label for="GasBill">Gas Bill:</label>
                            <input type="number" class="form-control" @bind="updateBill.GasBill" required />
                        </div>
                        <div class="form-group">
                            <label for="ServiceCharge">Service Charge:</label>
                            <input type="number" class="form-control" @bind="updateBill.ServiceCharge" />
                        </div>
                        <div class="form-group">
                            <label for="ServiceCharge">Month Name:</label>
                            <input type="text" class="form-control" @bind="updateBill.MonthName" />
                        </div>
                        <div class="form-group">
                            <label for="Tenant">Tenant:</label>
                            <select class="form-control" @bind="newUnitId" required>
                                @foreach (var unit in unitOptions)
                                {
                                    <option value="@unit.UnitID">@unit.Unit?.unitName</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="Status">Status:</label>
                            <select class="form-control" @bind="updateBill.StatusId" required>
                                @foreach (var status in statusOptions)
                                {
                                    <option value="@status.Id">@status.Name</option>
                                }
                            </select>
                        </div>
                       
                        <button type="submit" class="btn btn-primary mt-3">Update</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


<div class="modal" tabindex="-1" style="@DeleteModalStyle">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal Title</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="hideDelete"></button>
            </div>
            <div class="modal-body">
                <!-- Modal Content Goes Here -->
                Are you sure you want to proceed?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="hideDelete">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="DeleteConfirmed">Yes, Proceed</button>
            </div>
        </div>
    </div>
</div>







@code {
    public List<BillGenerate> Bg=new List<BillGenerate>();
    int newUnit;
    bool showModal = false;
    bool DeleteModel = false;
    bool EditModal = false;
    private int roleToDelete;
    private List<Tenant> unitOptions = new List<Tenant>();

    private List<Status> statusOptions = new List<Status>();


    public string userId;
    protected override async Task OnInitializedAsync()
    {
        userId = await useriddecrypt.GetDecryptedUserId();
        Bg = await billservice.GetAllBill(Int32.Parse(userId));
        unitOptions = await billservice.GetBillOptionsAsync(Int32.Parse(userId));


    }

    public BillGenerate bill = new BillGenerate();
    private BillGenerate updateBill = new BillGenerate();
    public async void SaveBill()
    {

        showModal = false;


        if (newUnit == 0)
        {
            newUnit = unitOptions[0].UnitID;
        }

        await billservice.AddBill(bill, newUnit);

        Bg = new List<BillGenerate>();
        Bg = await billservice.GetAllBill(Int32.Parse(userId));

        bill = new BillGenerate();

        StateHasChanged();
    }
    async Task showModel()
    {
        statusOptions = await userservice.GetStatusOptionsAsync();

        showModal = true;
    }
    void HideModal()
    {
        showModal = false;
        bill = new BillGenerate();

    }
    void hideDelete()
    {
        DeleteModel = false;
    }

    void hideUpdate()
    {
        EditModal = false;
        bill = new BillGenerate();

    }
    public int newUnitId;
    async Task UpdateBill(int billId,int unitId)
    {
        // Call the service method with the parsed memberId
        var billMember = await billservice.GetBillById(billId);
        newUnitId = billMember.Tenant.Unit.UnitID;

        EditModal = true;
        if (billMember != null)
        {
            updateBill = new BillGenerate()
                {
                    BillingID = billMember.BillingID,
                    ElectricityBill = billMember.ElectricityBill,
                    GasBill = billMember.GasBill,
                    ServiceCharge = billMember.ServiceCharge,
                    MonthName=billMember.MonthName,


                    StatusId = billMember.StatusId,

                };
            statusOptions = await userservice.GetStatusOptionsAsync();
            unitOptions = await billservice.GetBillOptionsAsync(Int32.Parse(userId));

            // Additional code to update the user, e.g., save to the database, if necessary
        }
        else
        {
            // Handle the case where the member with the given ID is not found
            // For example, you can log the error, redirect the user to an error page, or display a message
            // This depends on your application's requirements
        }
    }





    protected async Task DeleteBill(int roleId)
    {
        roleToDelete = roleId;
        DeleteModel = true;
    }

    private async Task DeleteConfirmed()
    {
        await billservice.deleteAsync(roleToDelete);
        Bg = await billservice.GetAllBill(Int32.Parse(userId));




        // Reset variables
        roleToDelete = 0;
        DeleteModel = false;
    }

    private async Task UpdatedBill()
    {
        EditModal = false;


        await billservice.updatedateBill(updateBill, newUnitId);
    }
    private void DetailsRent(int rentId)
    {
        // Navigate to the desired page
        NavigationManager.NavigateTo($"./BillGenerate/{rentId}");
    }
    string ModalStyle => showModal ? "display: block;" : "display: none;";
    string DeleteModalStyle => DeleteModel ? "display: block;" : "display: none;";
    string EditModalStyle => EditModal ? "display: block;" : "display: none;";

}
