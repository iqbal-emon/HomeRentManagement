@page "/Login"

@using HomeRentManagement.Data;
@using HomeRentManagement.Authentication;
@inject UserService UserService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject IJSRuntime js

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border mt-5">
    @if (mailCheck == true)
    {
        <div class="alert alert-danger" role="alert">
            Invalid Email & Password
        </div>

    }
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>
        <div class="mb-3">
            <label>User Name</label>
            <input @bind="model.Name" class="form-control" placeholder="User Name" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input @bind="model.Password" type="password" class="form-control" placeholder="Password" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="Authenticate" class="btn btn-primary">Login</button>
        </div>
    </div>
</div>
@code {
    public bool mailCheck=false;
    public class Login
    {
        public string Name { get; set; }
        public string Password { get; set; }
    }
    Login model = new Login();

    private async Task Authenticate()
    {
        var memberAccount = UserService.GetByUserName(model.Name);

        if (memberAccount == null || memberAccount.StatusId != 1 ||
     (memberAccount.Password != model.Password ||
     (memberAccount.Email != model.Name && memberAccount.Username != model.Name)))
        {
            mailCheck = true;
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                Id = memberAccount.UserId.ToString(),
                Role = memberAccount.Role.Title
            });

        var userId = memberAccount.UserId.ToString();

  
        if (memberAccount.Role.Title == "Admin")
        {
            navManager.NavigateTo("./House-Owner", true);

        }
        else
        {
            navManager.NavigateTo("/HomeDetails", true);

        }


    }




}
