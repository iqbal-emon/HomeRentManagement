@page "/HomeDetails"


@using HomeRentManagement.Data;
@inject HomeService homeservice;
@inject UserService userservice;
@inject IJSRuntime js
@inject UserIdDecrypt useriddecrypt





<div class="container mt-5">
    <div class="d-flex justify-content-between">
        <h3>Home Details</h3>
        <button class="btn btn-primary" @onclick="showModel">Add House</button>
    </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Home Name</th>
                    <th>Home Details</th>
                    <th>Status</th>
                    <th>Floors</th>

                    <th>Action</th>


                </tr>
            </thead>
            <tbody>
                @if (houses != null && houses.Any())
                {
                    @foreach (var house in houses)
                    {
                        <tr>
                            <td>@house.HouseName</td>
                            <td>@house.HouseAddress</td>
                            <td>@house.Status?.Name </td>
                            <td>@house.floorNumber</td>

                            <td>
                                @if (house.StatusId == 3)
                                {

                                    <button disabled class="btn btn-danger btn-sm mr-3" @onclick="() => DeleteHouse(house.HouseID)">Delete</button>
                                }
                                else
                                {
                                    <button class="btn btn-danger btn-sm mr-3" @onclick="() => DeleteHouse(house.HouseID)">Delete</button>

                                }
                                <button class="btn btn-primary btn-sm m-2" @onclick="()=>UpdateHouse(house.HouseID)">Edit</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">No members found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="modal px-5" tabindex="-1" style="@ModalStyle">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add House</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="HideModal"></button>
            </div>
            <div class="modal-body">
                <form @onsubmit="SaveHouse">
                    <div class="form-group">
                        <label for="HouseName">HouseName:</label>
                        <input type="text" class="form-control" @bind="house.HouseName" required />
                    </div>
                    <div class="form-group">
                        <label for="HouseAddress">HouseAddress:</label>
                        <input type="text" class="form-control" @bind="house.HouseAddress" required />
                    </div>
                    <div class="form-group">
                        <label for="Floor ">Floor:</label>
                        <input type="number" class="form-control" @bind="house.floorNumber" required />
                    </div>



                    <div class="form-group">
                        <label for="Status">Status:</label>
                        <select class="form-control" @bind="@house.StatusId" required>
                            @foreach (var status in statusOptions)
                            {
                                <option value="@status.Id">@status.Name</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Submit</button>
                </form>
            </div>


        </div>
    </div>
</div>

@if (UpdateHouse != null)
{
    <div class="modal px-5" tabindex="-1" style="@EditModalStyle">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Home Owner</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="hideUpdate"></button>
                </div>
                <div class="modal-body">
                    <form @onsubmit="UpdateHouseBtn">
                        <div class="form-group">
                            <label for="HouseName">HouseName:</label>
                            <input type="text" class="form-control" @bind=@updateHouse.HouseName required />
                        </div>
                        <div class="form-group">
                            <label for="HouseAddress">HouseAddress:</label>
                            <input type="text" class="form-control" @bind=@updateHouse.HouseAddress required />
                        </div>
                        <div class="form-group">
                            <label for="Floor ">Floor:</label>
                            <input type="number" class="form-control" @bind="updateHouse.floorNumber" required />
                        </div>
                      

                        <div class="form-group">
                            <label for="Status">Status:</label>
                            <select class="form-control" @bind="@updateHouse.StatusId" required>
                                @foreach (var status in statusOptions)
                                {
                                    <option value="@status.Id">@status.Name</option>
                                }
                            </select>
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Update</button>
                    </form>
                </div>


            </div>
        </div>
    </div>
}












<div class="modal" tabindex="-1" style="@DeleteModalStyle">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal Title</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="hideDelete"></button>
            </div>
            <div class="modal-body">
                <!-- Modal Content Goes Here -->
                Are you sure you want to proceed?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="hideDelete">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="DeleteConfirmed">Yes, Proceed</button>
            </div>
        </div>
    </div>
</div>
@code {
    public List<House> houses;

    bool showModal = false;
    bool DeleteModel = false;
    bool EditModal = false;
    private int roleToDelete;
    private List<Status> statusOptions = new List<Status>();

    public string userId;
    protected override async Task OnInitializedAsync()
    {
        userId = await useriddecrypt.GetDecryptedUserId();
        houses = await homeservice.GetHouses(Int32.Parse(userId));

    }


    public House house = new House();
    private House updateHouse = new House();
    public Floor newFloor = new Floor();
    public Floor updatedFloor = new Floor();


    public async void SaveHouse()
    {

        showModal = false;
        house.OwnerId = Int32.Parse(userId);


        houses.Add(house);
        await homeservice.AddHouse(house);

        house = new House();


    }

    void HideModal()
    {
        showModal = false;
        house = new House();

    }
    void hideDelete()
    {
        DeleteModel = false;
    }

    void hideUpdate()
    {
        EditModal = false;

    }
    async Task showModel()
    {
        statusOptions = await userservice.GetStatusOptionsAsync();

        showModal = true;
    }

    async Task UpdateHouse(int roleId)
    {
        // Call the service method with the parsed memberId
        var roleMember = await homeservice.GetRoleById(roleId);

        EditModal = true;
        if (roleMember != null)
        {
            updateHouse = new House()
                {
                    HouseID = roleMember.HouseID,
                    HouseName = roleMember.HouseName,
                    HouseAddress = roleMember.HouseAddress,
                    StatusId = roleMember.StatusId,
                    floorNumber = roleMember.floorNumber

                };
            statusOptions = await userservice.GetStatusOptionsAsync();

            // Additional code to update the user, e.g., save to the database, if necessary
        }
        else
        {
            // Handle the case where the member with the given ID is not found
            // For example, you can log the error, redirect the user to an error page, or display a message
            // This depends on your application's requirements
        }
    }







    protected async Task DeleteHouse(int roleId)
    {
        roleToDelete = roleId;
        DeleteModel = true;
    }

    private async Task DeleteConfirmed()
    {
        await homeservice.deleteAsync(roleToDelete);
        houses = await homeservice.GetHouses(Int32.Parse(userId));


        // Reset variables
        roleToDelete = 0;
        DeleteModel = false;
    }

    private async Task UpdateHouseBtn()
    {
        EditModal = false;


        await homeservice.updatedateHouse(updateHouse);
    }
    string ModalStyle => showModal ? "display: block;" : "display: none;";
    string DeleteModalStyle => DeleteModel ? "display: block;" : "display: none;";
    string EditModalStyle => EditModal ? "display: block;" : "display: none;";



}
